name: CI

on:
    workflow_dispatch:
jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            Version: ${{ steps.gitversion.outputs.SemVer }}
            CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}

        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v0.9.7
              with:
                  versionSpec: 5.x

            - name: Determine Version
              uses: gittools/actions/gitversion/execute@v0.9.7
              id: gitversion

            - name: Display GitVersion outputs
              run: |
                  echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
                  echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v2
              with:
                  global-json-file: global.json

            - name: Lint
              run: dotnet format --verify-no-changes .

            - name: Build and Pack NuGet package
              run: dotnet pack src/Subdivisions.Aws --configuration Release --include-symbols -p:Version='${{ steps.gitversion.outputs.SemVer }}' --output src/Subdivisions.Aws/Package

            - name: Build and Pack NuGet package
              run: dotnet pack src/Subdivisions.Testing --configuration Release --include-symbols -p:Version='${{ steps.gitversion.outputs.SemVer }}' --output src/Subdivisions.Testing/Package

            - name: Upload lib NuGet package artifact to GitHub
              uses: actions/upload-artifact@v2
              with:
                  name: libPackage
                  path: src/Subdivisions.Aws/Package

            - name: Upload testing lib NuGet package artifact to GitHub
              uses: actions/upload-artifact@v2
              with:
                  name: testingPackage
                  path: src/Subdivisions.Testing/Package

    release:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master' && needs.build.outputs.CommitsSinceVersionSource > 0 #Only release if there has been a commit/version change
        needs: build

        steps:
            - name: Prep packages
              run: dotnet nuget add source --username access55 --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/access55/index.json"

            - name: Download lib nuget package artifact
              uses: actions/download-artifact@v1.0.0
              with:
                  name: libPackage

            - name: Download testing lib nuget package artifact
              uses: actions/download-artifact@v1.0.0
              with:
                  name: testingPackage

            - name: Push package to GitHub packages
              run: |
                  dotnet nuget push libPackage/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }}  --source "github"
                  dotnet nuget push testingPackage/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }}  --source "github"

            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                  tag: ${{ needs.build.outputs.Version }}
                  name: Release ${{ needs.build.outputs.Version }}
                  artifacts: "libPackage/*"
                  token: ${{ secrets.GITHUB_TOKEN }}
